// Generated by CoffeeScript 1.10.0

/*
jspsych-mdp.coffee
Fred Callaway

Plugin for Markov Decision Processes

Documentation: HA!
 */

(function() {
  var KEYCODE_TO_LETTER;

  KEYCODE_TO_LETTER = {
    70: 'F',
    74: 'J',
    75: 'K',
    76: 'L'
  };

  jsPsych.plugins['mdp'] = (function() {
    var plugin, state;
    console.log('defining mdp plugin ');
    plugin = {};
    state = null;
    plugin.trial = function(display_element, trial) {
      var after_response, choices, end_trial, img, keyboardListener, response, setTimeoutHandlers, states, stimuli_html, t1, t2;
      states = trial.states;
      if (state === null) {
        state = trial.start;
      }
      response = null;
      console.log('mdp trial in state ' + state.id);
      setTimeoutHandlers = [];
      if (state.prompt) {
        display_element.append(state.prompt);
      }
      stimuli_html = [
        "<div id='jspsych-distributed-imgs'>", ((function() {
          var j, len, ref, results;
          ref = state.stimuli;
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            img = ref[j];
            results.push("<img src='" + img + "' alt=''/>");
          }
          return results;
        })()).join('\n'), '<span class="stretch"></span></div>'
      ].join('\n');
      display_element.append(stimuli_html);
      end_trial = function() {
        var i, next_state_id, trial_data;
        trial_data = {
          state: state.id,
          action: KEYCODE_TO_LETTER[response.key],
          rt: response.rt
        };
        console.log(trial_data);
        next_state_id = state.actions[trial_data.action]();
        state = states[next_state_id];
        display_element.html('');
        i = 0;
        while (i < setTimeoutHandlers.length) {
          clearTimeout(setTimeoutHandlers[i]);
          i++;
        }
        if (typeof keyboardListener !== 'undefined') {
          jsPsych.pluginAPI.cancelKeyboardResponse(keyboardListener);
        }
        jsPsych.finishTrial(trial_data);
      };
      after_response = function(info) {
        $('#jspsych-single-stim-stimulus').addClass('responded');
        if (response === null) {
          response = info;
        }
        end_trial();
      };
      choices = ['F', 'J'];
      keyboardListener = jsPsych.pluginAPI.getKeyboardResponse({
        callback_function: after_response,
        valid_responses: choices,
        rt_method: 'date',
        persist: false,
        allow_held_key: false
      });
      if (trial.timing_stim > 0) {
        t1 = setTimeout((function() {
          $('#jspsych-single-stim-stimulus').css('visibility', 'hidden');
        }), trial.timing_stim);
        setTimeoutHandlers.push(t1);
      }
      if (trial.timing_response > 0) {
        t2 = setTimeout((function() {
          end_trial();
        }), trial.timing_response);
        setTimeoutHandlers.push(t2);
      }
    };
    return plugin;
  })();

}).call(this);
